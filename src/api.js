/* eslint no-use-before-define: 0 */
const returnCustomColors = function(config) {
  const map = new Map()

  Object.keys(config.customColors).forEach(key => {
    map.set(key, config.customColors[key])
  })

  let colorsString = ""

  map.forEach((value, key) => {
    colorsString += `"${key}":(${value}, findColorInvert(${value})),`
  })

  return `$addColors: (${colorsString});
          $colors: map-merge($colors, $addColors);`
}

export const generate = value => {
  const config = value

  var sassBody = `
      /*! Theme generated by BulmaThemeGenerator |  https://github.com/m-kutnik */
      @import "bulma/sass/utilities/initial-variables";
      @import "bulma/sass/utilities/functions";
      $radius: 3px;
      
      $radius: ${config.appearance.borderRadius}px;
      
      $background-color: ${config.colors.background};
      $primary-color: ${config.colors.primary};
      $primary-color-invert: findColorInvert($primary-color);
      $link-color: ${config.colors.link};
      $link-color-invert: findColorInvert($link-color);
      $info-color: ${config.colors.info};
      $info-color-invert: findColorInvert($info-color);
      $success-color: ${config.colors.success};
      $success-color-invert: findColorInvert($success-color);
      $warning-color: ${config.colors.warning};
      $warning-color-invert: findColorInvert($warning-color);
      $danger-color: ${config.colors.danger};
      $danger-color-invert: findColorInvert($danger-color);
      
      // Color theme
      
      $black: ${config.shades["black"]};
      $black-bis: ${config.shades["black-bis"]};
      $black-ter: ${config.shades["black-ter"]};
      $grey-darker: ${config.shades["grey-darker"]};
      $grey-dark: ${config.shades["grey-dark"]};
      $grey-light: ${config.shades["grey-light"]};
      $grey-lighter: ${config.shades["grey-lighter"]};
      $white-ter: ${config.shades["white-ter"]};
      $white-bis: ${config.shades["white-bis"]};
      $white: ${config.shades["white"]};
      
      // Bind Colors
      
      $primary: $primary-color;
      $primary-invert: $primary-color-invert;
      $link: $link-color;
      $link-invert: $link-color-invert;
      $info: $info-color;
      $info-invert: $info-color-invert;
      $success: $success-color;
      $success-invert: $success-color-invert;
      $warning: $warning-color;
      $warning-invert: $warning-color-invert;
      $danger: $danger-color;
      $danger-invert: $danger-color-invert;
      $body-background-color: $background-color;
      $link: $primary-color;
      $link-hover: lighten($primary-color, 15%);
      
      // Fonts
      
      ${
        config.adv.fontFamily !== ""
          ? `$custom-fonts: ${
              config.adv.fontFamily
            };$family-primary: #{$custom-fonts + ", " +  $family-sans-serif};`
          : ""
      }

      // Box
      
      ${
        config.theme === "light"
          ? "$box-background-color: darken($background-color, 15%);"
          : "$box-background-color: lighten($background-color, 15%);"
      }

      // Card

      ${
        config.theme === "light"
          ? "$card-background-color: darken($background-color, 15%);"
          : "$card-background-color: lighten($background-color, 15%);"
      }
      
      
      @import "bulma/sass/utilities/derived-variables";
      
      // Custom Colors
      
      ${
        Object.keys(config.customColors).length === 0
          ? ""
          : returnCustomColors(config)
      }    
        
      // Import the rest of Bulma
      @import "bulma/sass/utilities/controls";
      @import "bulma/sass/utilities/extends";
      @import "bulma/sass/utilities/mixins";
      @import "bulma/sass/base/all";
      @import "bulma/sass/elements/all";
      @import "bulma/sass/form/all";
      @import "bulma/sass/components/all";
      @import "bulma/sass/layout/all";
      @import "bulma/sass/grid/all";
      @import "bulma/sass/helpers/all";
      
      ${config.adv.customCSS}
      `
  return sassBody.toString()
}
